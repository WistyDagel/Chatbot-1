package chatbot.view;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import chatbot.controller.ChatbotAppController;

import javax.swing.*;

import java.awt.Font;

public class ChatbotPanel extends JPanel
{
	private ChatbotAppController baseController;
	/**
	 * Initialize the sampleButton and random button.
	 */
	private JButton sampleButton;
	/**
	 * Initialize the sampleField
	 */
	private JTextField sampleField;
	private JScrollPane chatPane;
	private JTextArea chatArea;
	private SpringLayout baseLayout;
	private JButton randomButton;
	/**
	 * Constructor for the ChatbotPanel
	 * @param baseController
	 */
	public ChatbotPanel(ChatbotAppController baseController) 
	{
		this.baseController = baseController;
		sampleButton = new JButton("Click me!");
		chatArea = new JTextArea(5,25);
		chatArea.setBackground(Color.LIGHT_GRAY);
		chatPane = new JScrollPane(chatArea);
		randomButton = new JButton("Random!");
		
		sampleField = new JTextField(25);
		sampleField.setFont(new Font("Impact", Font.PLAIN, 11));
		sampleField.setBackground(Color.LIGHT_GRAY);
		
		baseLayout = new SpringLayout();
		baseLayout.putConstraint(SpringLayout.NORTH, randomButton, 0, SpringLayout.NORTH, sampleButton);
		baseLayout.putConstraint(SpringLayout.EAST, randomButton, 0, SpringLayout.EAST, sampleField);
		baseLayout.putConstraint(SpringLayout.EAST, sampleField, 318, SpringLayout.WEST, this);
		baseLayout.putConstraint(SpringLayout.WEST, sampleButton, 40, SpringLayout.WEST, this);
		baseLayout.putConstraint(SpringLayout.WEST, sampleField, 40, SpringLayout.WEST, this);
		baseLayout.putConstraint(SpringLayout.SOUTH, sampleButton, -6, SpringLayout.NORTH, chatPane);
		baseLayout.putConstraint(SpringLayout.NORTH, sampleField, 6, SpringLayout.SOUTH, chatPane);
		baseLayout.putConstraint(SpringLayout.NORTH, chatPane, 80, SpringLayout.NORTH, this);
		baseLayout.putConstraint(SpringLayout.WEST, chatPane, 40, SpringLayout.WEST, this);
		
		
		setupScrollPane();		
		setupPanel();
		setupLayout();
		setupListeners();
	}
	
	private void setupScrollPane()
	{
		chatArea.setLineWrap(true);
		chatArea.setWrapStyleWord(true);
	}
	
	/**
	 * Sets up the basic look of the Panel.
	 */
	private void setupPanel()
	{
		this.setBackground(Color.BLUE);
		this.setLayout(baseLayout);
		
		this.add(sampleButton);
		this.add(sampleField);
		this.add(chatPane);
	}
	/**
	 * Dumping ground of autogenerated code. Contains the locations of items in panel.
	 */
	private void setupLayout()
	{
		randomButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
			}
		});
		add(randomButton);
		
		JLabel lblWelcomeToChatbot = new JLabel("Welcome to Chatbot! v1.0");
		baseLayout.putConstraint(SpringLayout.NORTH, lblWelcomeToChatbot, 10, SpringLayout.NORTH, this);
		baseLayout.putConstraint(SpringLayout.WEST, lblWelcomeToChatbot, 21, SpringLayout.WEST, this);
		baseLayout.putConstraint(SpringLayout.EAST, lblWelcomeToChatbot, 0, SpringLayout.EAST, this);
		lblWelcomeToChatbot.setFont(new Font("DejaVu Sans Mono", Font.PLAIN, 22));
		lblWelcomeToChatbot.setForeground(Color.RED);
		lblWelcomeToChatbot.setBackground(Color.RED);
		add(lblWelcomeToChatbot);
		
		
	}
	
	private void setupListeners()
	{
		sampleButton.addActionListener(new ActionListener()
		{
			public void actionPerformed(ActionEvent click)
			{
				String userTypedText = sampleField.getText();
				String chatbotResponse = baseController.sendTextToChatBot(userTypedText);
				displayTextToUser(userTypedText);
				displayTextToUser(chatbotResponse);
				sampleField.setText("");
				
			}
		});
		
		randomButton.addActionListener(new ActionListener()
		{
			int i = 0;
			public void actionPerformed(ActionEvent click)
			{
				i++;
				if (i == 1)
				{
					chatArea.append("\nNever click this button again. Never");
				}
				else if (i == 2)
				{
					chatArea.append("\nAre you kidding me? You clicked it again?");
				}
				else if (i == 3)
				{
					chatArea.append("\nI'm done with you. Chatbot out.");
				}
				else if(i == 4)
				{
					baseController.getBaseFrame().dispose();
				}
			}
			
		});
	}

	public void displayTextToUser(String input)
	{
		chatArea.append("\n" + input);
	}
}

